{
  "hash": "0d3c7874fee13c177374317bf6b79c56",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"【Windows】開発コンテナを使って R 環境を構築！\"\ndate: 2024-05-04\ndate-modified: last-modified\nformat: html\ncategories: \n  - R\n---\n\n\nローカル環境から卒業！\n\n# はじめに\n\nWSL2 と VSCode の開発コンテナを使って R の環境を構築する方法を説明します。\n\n基本的な内容は[こちらのページ](https://zenn.dev/nicetak/articles/vscode-docker-2023)を参考にしており、個人的に使いやすいように修正を加えています。\n\n開発コンテナを使うメリット等はそちらを参照してください。\n\n# 事前準備\n\nまず、WSL2 と Ubuntu、そして VSCode の準備をします。\n\n## WSL2\n\n1. PowerShell または Windows コマンドプロンプトを管理者権限で開きます。\n\n    - 右クリックで管理者権限を使えます。\n\n![](powershell.png)\n\n2. 以下のコマンドを入力して実行する。\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwsl --install\n```\n:::\n\n\nこれでインストールはできているはずですが、詳しくは[こちらのサイト](https://learn.microsoft.com/ja-jp/windows/wsl/install)を参照してください。\n\n## Ubuntu\n\n1. Microsoft Store を開く。\n\n2. 「Ubuntu」と検索する。\n\n3. インストールする。\n\n![](ubuntu.png)\n\n## VSCode\n\n1. VSCode の[ダウンロードサイト](https://code.visualstudio.com/)からダウンロードする。\n\n    - 画面左側の Download for Windows をクリックしてダウンロードできます。\n    \n![](vscode.png)\n\n2. （任意）日本語の拡張機能をインストールする。\n\n    - 画面左側に拡張機能のアイコンがあります（デフォルトでは上から5番目）。ここの検索ボックスに `MS-CEINTL.vscode-language-pack-ja` と入力し、1番上に出てきたものをインストールします。\n    \n    - インストール後、VSCode を再起動すれば日本語が反映されていると思います。\n\n![](vscode-ja.png)\n\n3. 拡張機能のインストール\n\n    - 拡張機能の検索ボックスで、次の ID を入力し、インストールします。\n    \n    - `ms-vscode-remote.remote-containers` (Dev Containers)\n    \n    - `ms-vscode-remote.remote-wsl` (WSL)\n    \n4. WSL に接続する。\n\n    - VSCode から先ほどインストールした WSL に接続します。\n    \n    - 画面左下の `><` アイコンをクリックして、「WSL への接続」をクリックします。\n    \nこれで事前準備は完了です。\n\n# 開発環境の構築\n\n## GitHub アカウントの作成\n\n既に持っていればスキップしてください。\n\nファイルは基本的に GitHub で管理するので、[ここ](https://github.com/)からアカウントを作成してください。",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}