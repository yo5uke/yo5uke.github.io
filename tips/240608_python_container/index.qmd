---
title: "Python のための開発コンテナ"
description: |
    Python のための開発コンテナを作成する手順を紹介します。
date: 2024-06-08
categories:
    - Python
    - VSCode
    - Docker
    - Ubuntu
draft: true
---

# はじめに

[以前の記事](https://yo5uke.github.io/tips/240504_container/)で、Docker & VSCode を用いた R 環境の構築方法をご紹介しました。

今回は同じく Docker & VSCode で使える Python の環境テンプレートを作成しましたので、そちらをご紹介します。

以前の R 環境でも Python は使えましたが、特に R や Julia 等が不要である方は、ぜひ参考にしてみてください。

# 事前準備

::: {.callou-note title="Note"}
1から手順を説明していきますが、既に Docker や Ubuntu 等をインストールしている場合は適宜飛ばしてください。
:::

## WSL2（Windows ユーザーのみ）

1. アプリ一覧から PowerShell または Windows コマンドプロンプトを管理者権限で開く

    - 右クリックで管理者権限を使えます。

![](image/powershell.png){width="70%" fig-align=center}

2. 以下のコマンドを入力して実行

    - これでインストールはできるはずですが、詳しくは[こちらのサイト](https://learn.microsoft.com/ja-jp/windows/wsl/install)を参照してください。

```{.sh filename="PowerShell"}
wsl --install
```
3. ユーザー名とパスワードを設定

    - インストールが終わると、Linux ディストリビューションのユーザー名とパスワードの作成を求められます^[求められない場合は、続けて `wsl` とだけ入力して実行してください。]。

    - ユーザー名は何でも大丈夫です。パスワードもめちゃくちゃ簡単で問題ありません。

    - パスワードは画面上には表示されませんが、ちゃんと入力されています。慌てて何回も入力しないようにしてください。

エクスプローラーから Linux に入り、`\Ubuntu\home\ユーザー名` がメインとなるディレクトリです。

## Homebrew（Mac ユーザーのみ）

Mac ユーザーは Homebrew を使って諸々インストールしていくので、まだの方はここでインストールしてください。

1. ターミナルを開く

    - アプリ一覧から「ターミナル」を探してください。

2. 以下のコマンドを入力して実行

    - パスワードを求められるので、入力してください。

```{.sh filename="Terminal"}
/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
```

## VSCode {#sec-vscode-setting}

1. VSCode の[ダウンロードサイト](https://code.visualstudio.com/)からダウンロード、インストール

    - Download for Windows^[もしくは Mac] をクリックしてダウンロードできます。

    - インストールができたら、VSCode を開いてください。

2. （任意）日本語の拡張機能をインストール

    - 画面左側に拡張機能のアイコン ![](extention.png) があります。ここの検索ボックスに `japanese` と入力し、1番上に出てきたものをインストールします。
    
    - インストール後、VSCode を再起動すれば日本語が反映されていると思います。

![](image/vscode-ja.png)

3. 拡張機能のインストール

    - 拡張機能の検索ボックスで、次の ID を入力し、インストールします。
    
    - `ms-vscode-remote.remote-containers` (Dev Containers)
    
    - `ms-vscode-remote.remote-wsl` (WSL, Windows ユーザーのみ)
    
4. WSL に接続（Windows ユーザーのみ）

    - VSCode から先ほどインストールした WSL に接続します。
    
    - 画面左下の `><` アイコンをクリックして、「WSL への接続」をクリックします。

![](image/vscode-wsl.png)

## Docker

Docker をインストールします。

1. Windows の方は[ここ](https://docs.docker.com/desktop/install/windows-install/)から Docker Desktop for Windows を、Mac の方は[こちら](https://docs.docker.com/desktop/install/mac-install/)からダウンロード＆インストール

2. 設定の確認（Windows のみ）

    - インストール出来たら、画面上部の設定ボタンから Resources、WSL integration と進み、チェックボックスにチェック、Ubuntu がオンになっていることを確認してください。
    
    - たまに、何もしていないのにここがオフになっていて、トラブることがあります。

    - 詳しくは[こちら](https://docs.docker.jp/docker-for-windows/install.html)をご覧ください。日本語で書いてあります。
    
![](image/docker-desktop.png)

3. 画面左側の Volumes に進み、Create からボリュームを作成

    - 次の3つを作成します（大文字小文字に注意！）。
    
    - `fonts`, `cache`, `TinyTeX`

![Mac での画面](image/create_volume_mac.png)

## Git

### Windows

1. Ubuntu で git をインストール

    - Windows のアプリ一覧から Ubuntu を探し、開いてください。開いたら、以下のコマンドを入力して実行します。

```{.sh filename="Ubuntu"}
sudo apt-get install git
```

![Ubuntu](image/ubuntu-git.png){width="70%"}

2. 設定

    - 以下のコマンドを入力、実行します。ユーザー名は何でも大丈夫です。

```{.sh filename="Ubuntu"}
git config --global user.name [任意のユーザ名]
git config --global user.email [任意のメールアドレス]
```

### Mac

1. Homebrew で git をインストール

    - ターミナルを開いて、以下のコマンドを入力して実行します。

```{.sh filename="Terminal"}
brew install git
```

![この Mac では2回目なので git is already installed と表示されてます…。](image/homebrew.png){width="70%"}

2. 設定

    - 以下のコマンドを入力、実行します。ユーザー名は何でも大丈夫です。

    - ここに限らずですが、`[]` ごと置き換えてくださいね。

```{.sh filename="Terminal"}
git config --global user.name [任意のユーザ名]
git config --global user.email [任意のメールアドレス]
```

## GitHub アカウントの作成

ファイルは基本的に GitHub で管理するので、[ここ](https://github.com/)からアカウントを作成してください。

### ポイント

GitHub アカウントを作成したら、VSCode にログインしておきましょう。

1. VSCode を開く

2. 画面左下のアイコンをクリック

    - GitHub でサインインを行う

GitHub にログインすることで、その後の作業がスムーズに進みます。

事前準備は以上です！












