---
title: "【R パッケージ】インストールも読み込みも一撃で？【pacman】"
date: 2024-05-08
format: html
categories: 
  - R
  - 便利
---

`install.packages()` はもう不要！

# はじめに

何か新しいプロジェクトを始める際に、新しいパッケージをいちいちインストールして読み込むのは面倒ですよね。

そんな時に便利な `pacman` パッケージのご紹介です。

# pacman とは

ざっくり言うと、パッケージのマネジメントツールです。このパッケージには `p_` で始まる様々な関数が含まれています。

特に便利なのが `p_load()` で、パッケージのインストールと読み込みを両方してくれます。もちろんインストール済みのパッケージは、読み込むだけです。

さらに便利なのは、複数のパッケージをまとめて書けるということです。`install.packages()` は一度に複数のパッケージをインストールできるものの、`library()` はパッケージごとにしなくてはなりません。その点 `pacman::p_load()` は、括弧内にパッケージを並べて書くことで、複数のパッケージを一度にインストール、読み込みまでしてくれます（しかもダブルクォーテーションで囲まなくてよい！）。

# 使ってみる

早速使ってみます。今回は、`tidyverse`, `sf`, `here` の3つを使いたいとして、まだインストールもしていないとします。

## library()

まず、インストールします。

```{r}
#| eval: false

install.packages("tidyverse")
install.packages("sf")
install.packages("here")
```

次に、読み込みます。

```{r}
#| warning: true

library(tidyverse)
library(sf)
library(here)
```

これで使えるようになりました。

## p_load()

```{r}
#| include: false

pacman::p_unload("all")
```


`pacman::p_load()` はこれで一発です。

```{r}
pacman::p_load(tidyverse, sf, here)
```

この場合、上に出てきたような読み込みに付随するメッセージは出てきません。

# 使うにあたって

`pacman` がパッケージである以上、はじめに `install.packages("pacman")` はしなければなりません。それ以降は `install.packages()` とはおさらばできます。

`packman::` の書き方を使って、`library(pacman)`も省略しましょう^[この書き方では、`library()` を使わずともパッケージ内の関数が使えます。一度だけ使いたい！というときに便利です。また、どのパッケージに属しているかが明確になるというメリットもあります。]。

また、Docker を用いて環境構築する場合、Dockerfile にインストールすることを指示しておけば、それすら要らなくなります^[[こちら](https://yo5uke.github.io/tips/240504_container/)を参照]。

Dockerfile に以下を追加します。

```{.dockerfile filename="Dockerfile"}
RUN R -e "install.packages('pacman')"
```

これでビルドすれば、RStudio でインストールせずとも `pacman` が使えます。

# おまけ

パッケージを全部アップデートしたい、なんてこともありますよね。RStudio から一括でやる方法もありますが、せっかくなので `pacman` を使ってやってみましょう。

```{r}
#| eval: false

pacman::p_update()
```

これでいけます。

# まとめ

`pacman` パッケージをご紹介しました。

`library()` とどちらを使うかはお好み次第だと思います。

魅力を感じた方はぜひ使ってみてください！

# 参考

["install.packages()"するのはこれが最後！Rのパッケージ管理には「pacman」を使おう](https://qiita.com/taiyodayo/items/e69d997754d55e3d7e4c)