{
  "hash": "4bac9976afad7741a96ed627e48bd096",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"【パッケージ開発】[fixes]{.fira-code}でイベントスタディを効率化\"\ndescription: |\n  Staggered DiDにも対応しました。\ndate: 2025-05-25\ncategories:\n  - R\n---\n\n## はじめに\n\n本ページでは、two-way fixed effectsモデルのDiDにおけるイベントスタディを行うパッケージ、`fixes`について説明します。\n\n僕が今年の年始から地道に作成してきたパッケージで、一度tipsに書いたことがあるのですが、最近アップデートも重なってきたので再度書き直すことにしました。\n\n:::{.callout-note}\n## ご意見待ってます\n\n実戦経験が足りないパッケージなので、挙動がおかしかったり、こういう機能にも対応してほしいということがあれば、ページ下のコメントからどしどしお寄せください。こぢんまりしたページなので、いただいたものは余裕で全部対応できると思います。\n:::\n\nこれまでは処置個体において処置タイミングが同一のDiDにのみ対応していましたが、直近のアップデートで**各個体で処置タイミングが異なる、いわゆるStaggered DiDにも対応しました**。\n\n果たしてあらゆるケースに対応できているか、個人開発のパッケージとしては不安ではありますが、いくつかのデータセットでテストした分には問題なかったので、そのテストコードと併せて解説していきます。\n\n## 使用するパッケージ\n\n使用するのは`fixes`です。インストールは以下のコマンドでできます。\n\n``` r\npak::pak(\"fixes\")\n```\n\nもしくは\n\n``` r\ninstall.packages(\"fixes\")\n```\n\nです。開発版はGitHubからインストールできます。\n\n``` r\npak::pak(\"yo5uke/fixes\")\n```\n\n## 準備\n\nパッケージを読み込んで、デモに使うデータを準備します。\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(fixes)\nlibrary(tidyverse)\n```\n:::\n\n\nデータは`fixest`パッケージで用意されているものと、MixtapeのStaggered DiDの章で使用されているものを使います。\n\nまた、不足している変数を追加し、使わない変数もあるのであらかじめ除いておきます。\n\n`df_stagg`は未処置の個体の処置年、処置からの相対年をNAに変更し、`df_castle`に関してはMixtape内で行われている処理をしておきます^[参考：[Mixtape](https://mixtape.scunning.com/09-difference_in_differences#replicating-cheng2013-sort-of)]\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_base <- fixest::base_did\ndf_stagg <- fixest::base_stagg\ncastle <- haven::read_dta(\"https://github.com/scunning1975/mixtape/raw/master/castle.dta\")\n\n\ndf_stagg <- df_stagg |> \n  mutate(\n    year_treated = if_else(year_treated == 10000, NA_real_, year_treated), \n    time_to_treatment = if_else(time_to_treatment == -1000, NA_real_, time_to_treatment)\n  )\n\n# 以下Mixtape参考\ndropped_vars <- c(\"r20004\", \"r20014\",\n                  \"r20024\", \"r20034\",\n                  \"r20044\", \"r20054\",\n                  \"r20064\", \"r20074\",\n                  \"r20084\", \"r20094\",\n                  \"r20101\", \"r20102\", \"r20103\",\n                  \"r20104\", \"trend_9\", \"trend_46\",\n                  \"trend_49\", \"trend_50\", \"trend_51\"\n)\n\nregion <- castle |> \n  select(starts_with(\"r20\")) |> \n  names() |> \n  setdiff(dropped_vars)\n\ndf_castle <- castle |> \n  select(state, sid, year, treatment_date, l_homicide, all_of(region), popwt) |> \n  mutate(is_treated = if_else(!is.na(treatment_date), 1, 0), .after = treatment_date)\n```\n:::\n\n\n各データフレームは以下のような感じになっています。\n\n::: {.panel-tabset}\n\n## df_base\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<!-- preamble start -->\n\n    <script>\n\n      function styleCell_9qz2sxbxur9dm7zr6q49(i, j, css_id) {\n          var table = document.getElementById(\"tinytable_9qz2sxbxur9dm7zr6q49\");\n          var cell = table.rows[i]?.cells[j];  // Safe navigation to avoid errors\n          if (cell) {\n              console.log(`Styling cell at (${i}, ${j}) with class ${css_id}`);\n              cell.classList.add(css_id);\n          } else {\n              console.warn(`Cell at (${i}, ${j}) not found.`);\n          }\n      }\n      function insertSpanRow(i, colspan, content) {\n        var table = document.getElementById('tinytable_9qz2sxbxur9dm7zr6q49');\n        var newRow = table.insertRow(i);\n        var newCell = newRow.insertCell(0);\n        newCell.setAttribute(\"colspan\", colspan);\n        // newCell.innerText = content;\n        // this may be unsafe, but innerText does not interpret <br>\n        newCell.innerHTML = content;\n      }\n      function spanCell_9qz2sxbxur9dm7zr6q49(i, j, rowspan, colspan) {\n        var table = document.getElementById(\"tinytable_9qz2sxbxur9dm7zr6q49\");\n        const targetRow = table.rows[i];\n        const targetCell = targetRow.cells[j];\n        for (let r = 0; r < rowspan; r++) {\n          // Only start deleting cells to the right for the first row (r == 0)\n          if (r === 0) {\n            // Delete cells to the right of the target cell in the first row\n            for (let c = colspan - 1; c > 0; c--) {\n              if (table.rows[i + r].cells[j + c]) {\n                table.rows[i + r].deleteCell(j + c);\n              }\n            }\n          }\n          // For rows below the first, delete starting from the target column\n          if (r > 0) {\n            for (let c = colspan - 1; c >= 0; c--) {\n              if (table.rows[i + r] && table.rows[i + r].cells[j]) {\n                table.rows[i + r].deleteCell(j);\n              }\n            }\n          }\n        }\n        // Set rowspan and colspan of the target cell\n        targetCell.rowSpan = rowspan;\n        targetCell.colSpan = colspan;\n      }\n      // tinytable span after\n      window.addEventListener('load', function () {\n          var cellsToStyle = [\n            // tinytable style arrays after\n          { positions: [ { i: 6, j: 0 }, { i: 6, j: 1 }, { i: 6, j: 2 }, { i: 6, j: 3 }, { i: 6, j: 4 }, { i: 6, j: 5 },  ], css_id: 'tinytable_css_qriv0adgen4vfzn7ew9y',}, \n          { positions: [ { i: 0, j: 0 }, { i: 0, j: 1 }, { i: 0, j: 2 }, { i: 0, j: 3 }, { i: 0, j: 4 }, { i: 0, j: 5 },  ], css_id: 'tinytable_css_q2a73dc544680i5gaaro',}, \n          ];\n\n          // Loop over the arrays to style the cells\n          cellsToStyle.forEach(function (group) {\n              group.positions.forEach(function (cell) {\n                  styleCell_9qz2sxbxur9dm7zr6q49(cell.i, cell.j, group.css_id);\n              });\n          });\n      });\n    </script>\n\n    <style>\n      /* tinytable css entries after */\n      .table td.tinytable_css_qriv0adgen4vfzn7ew9y, .table th.tinytable_css_qriv0adgen4vfzn7ew9y { border-bottom: solid #d3d8dc 0.1em; }\n      .table td.tinytable_css_q2a73dc544680i5gaaro, .table th.tinytable_css_q2a73dc544680i5gaaro { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; }\n    </style>\n    <div class=\"container\">\n      <table class=\"table table-borderless\" id=\"tinytable_9qz2sxbxur9dm7zr6q49\" style=\"width: auto; margin-left: auto; margin-right: auto;\" data-quarto-disable-processing='true'>\n        <thead>\n        \n              <tr>\n                <th scope=\"col\">y</th>\n                <th scope=\"col\">x1</th>\n                <th scope=\"col\">id</th>\n                <th scope=\"col\">period</th>\n                <th scope=\"col\">post</th>\n                <th scope=\"col\">treat</th>\n              </tr>\n        </thead>\n        \n        <tbody>\n                <tr>\n                  <td>2.87530627</td>\n                  <td>0.5365377</td>\n                  <td>1</td>\n                  <td>1</td>\n                  <td>0</td>\n                  <td>1</td>\n                </tr>\n                <tr>\n                  <td>1.86065272</td>\n                  <td>-3.0431894</td>\n                  <td>1</td>\n                  <td>2</td>\n                  <td>0</td>\n                  <td>1</td>\n                </tr>\n                <tr>\n                  <td>0.09416524</td>\n                  <td>5.5768439</td>\n                  <td>1</td>\n                  <td>3</td>\n                  <td>0</td>\n                  <td>1</td>\n                </tr>\n                <tr>\n                  <td>3.78147485</td>\n                  <td>-2.8300587</td>\n                  <td>1</td>\n                  <td>4</td>\n                  <td>0</td>\n                  <td>1</td>\n                </tr>\n                <tr>\n                  <td>-2.55819959</td>\n                  <td>-5.0443544</td>\n                  <td>1</td>\n                  <td>5</td>\n                  <td>0</td>\n                  <td>1</td>\n                </tr>\n                <tr>\n                  <td>1.72873240</td>\n                  <td>-0.6363849</td>\n                  <td>1</td>\n                  <td>6</td>\n                  <td>1</td>\n                  <td>1</td>\n                </tr>\n        </tbody>\n      </table>\n    </div>\n<!-- hack to avoid NA insertion in last line -->\n```\n\n:::\n:::\n\n\n## df_stagg\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<!-- preamble start -->\n\n    <script>\n\n      function styleCell_be78uxgq7a2b9pns9lk0(i, j, css_id) {\n          var table = document.getElementById(\"tinytable_be78uxgq7a2b9pns9lk0\");\n          var cell = table.rows[i]?.cells[j];  // Safe navigation to avoid errors\n          if (cell) {\n              console.log(`Styling cell at (${i}, ${j}) with class ${css_id}`);\n              cell.classList.add(css_id);\n          } else {\n              console.warn(`Cell at (${i}, ${j}) not found.`);\n          }\n      }\n      function insertSpanRow(i, colspan, content) {\n        var table = document.getElementById('tinytable_be78uxgq7a2b9pns9lk0');\n        var newRow = table.insertRow(i);\n        var newCell = newRow.insertCell(0);\n        newCell.setAttribute(\"colspan\", colspan);\n        // newCell.innerText = content;\n        // this may be unsafe, but innerText does not interpret <br>\n        newCell.innerHTML = content;\n      }\n      function spanCell_be78uxgq7a2b9pns9lk0(i, j, rowspan, colspan) {\n        var table = document.getElementById(\"tinytable_be78uxgq7a2b9pns9lk0\");\n        const targetRow = table.rows[i];\n        const targetCell = targetRow.cells[j];\n        for (let r = 0; r < rowspan; r++) {\n          // Only start deleting cells to the right for the first row (r == 0)\n          if (r === 0) {\n            // Delete cells to the right of the target cell in the first row\n            for (let c = colspan - 1; c > 0; c--) {\n              if (table.rows[i + r].cells[j + c]) {\n                table.rows[i + r].deleteCell(j + c);\n              }\n            }\n          }\n          // For rows below the first, delete starting from the target column\n          if (r > 0) {\n            for (let c = colspan - 1; c >= 0; c--) {\n              if (table.rows[i + r] && table.rows[i + r].cells[j]) {\n                table.rows[i + r].deleteCell(j);\n              }\n            }\n          }\n        }\n        // Set rowspan and colspan of the target cell\n        targetCell.rowSpan = rowspan;\n        targetCell.colSpan = colspan;\n      }\n      // tinytable span after\n      window.addEventListener('load', function () {\n          var cellsToStyle = [\n            // tinytable style arrays after\n          { positions: [ { i: 6, j: 0 }, { i: 6, j: 1 }, { i: 6, j: 2 }, { i: 6, j: 3 }, { i: 6, j: 4 }, { i: 6, j: 5 }, { i: 6, j: 6 }, { i: 6, j: 7 },  ], css_id: 'tinytable_css_q5tg22zw5hm4bpfvlsde',}, \n          { positions: [ { i: 0, j: 0 }, { i: 0, j: 1 }, { i: 0, j: 2 }, { i: 0, j: 3 }, { i: 0, j: 4 }, { i: 0, j: 5 }, { i: 0, j: 6 }, { i: 0, j: 7 },  ], css_id: 'tinytable_css_y200jfsdqpa1cv65ifon',}, \n          ];\n\n          // Loop over the arrays to style the cells\n          cellsToStyle.forEach(function (group) {\n              group.positions.forEach(function (cell) {\n                  styleCell_be78uxgq7a2b9pns9lk0(cell.i, cell.j, group.css_id);\n              });\n          });\n      });\n    </script>\n\n    <style>\n      /* tinytable css entries after */\n      .table td.tinytable_css_q5tg22zw5hm4bpfvlsde, .table th.tinytable_css_q5tg22zw5hm4bpfvlsde { border-bottom: solid #d3d8dc 0.1em; }\n      .table td.tinytable_css_y200jfsdqpa1cv65ifon, .table th.tinytable_css_y200jfsdqpa1cv65ifon { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; }\n    </style>\n    <div class=\"container\">\n      <table class=\"table table-borderless\" id=\"tinytable_be78uxgq7a2b9pns9lk0\" style=\"width: auto; margin-left: auto; margin-right: auto;\" data-quarto-disable-processing='true'>\n        <thead>\n        \n              <tr>\n                <th scope=\"col\">id</th>\n                <th scope=\"col\">year</th>\n                <th scope=\"col\">year_treated</th>\n                <th scope=\"col\">time_to_treatment</th>\n                <th scope=\"col\">treated</th>\n                <th scope=\"col\">treatment_effect_true</th>\n                <th scope=\"col\">x1</th>\n                <th scope=\"col\">y</th>\n              </tr>\n        </thead>\n        \n        <tbody>\n                <tr>\n                  <td>90</td>\n                  <td>1</td>\n                  <td>2</td>\n                  <td>-1</td>\n                  <td>1</td>\n                  <td>0</td>\n                  <td>-1.0947021</td>\n                  <td>0.01722971</td>\n                </tr>\n                <tr>\n                  <td>89</td>\n                  <td>1</td>\n                  <td>3</td>\n                  <td>-2</td>\n                  <td>1</td>\n                  <td>0</td>\n                  <td>-3.7100676</td>\n                  <td>-4.58084528</td>\n                </tr>\n                <tr>\n                  <td>88</td>\n                  <td>1</td>\n                  <td>4</td>\n                  <td>-3</td>\n                  <td>1</td>\n                  <td>0</td>\n                  <td>2.5274402</td>\n                  <td>2.73817174</td>\n                </tr>\n                <tr>\n                  <td>87</td>\n                  <td>1</td>\n                  <td>5</td>\n                  <td>-4</td>\n                  <td>1</td>\n                  <td>0</td>\n                  <td>-0.7204263</td>\n                  <td>-0.65103066</td>\n                </tr>\n                <tr>\n                  <td>86</td>\n                  <td>1</td>\n                  <td>6</td>\n                  <td>-5</td>\n                  <td>1</td>\n                  <td>0</td>\n                  <td>-3.6711678</td>\n                  <td>-5.33381664</td>\n                </tr>\n                <tr>\n                  <td>85</td>\n                  <td>1</td>\n                  <td>7</td>\n                  <td>-6</td>\n                  <td>1</td>\n                  <td>0</td>\n                  <td>-0.3152137</td>\n                  <td>0.49562631</td>\n                </tr>\n        </tbody>\n      </table>\n    </div>\n<!-- hack to avoid NA insertion in last line -->\n```\n\n:::\n:::\n\n\n## df_castle\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<!-- preamble start -->\n\n    <script>\n\n      function styleCell_4izgg7utwi96mp1q4ief(i, j, css_id) {\n          var table = document.getElementById(\"tinytable_4izgg7utwi96mp1q4ief\");\n          var cell = table.rows[i]?.cells[j];  // Safe navigation to avoid errors\n          if (cell) {\n              console.log(`Styling cell at (${i}, ${j}) with class ${css_id}`);\n              cell.classList.add(css_id);\n          } else {\n              console.warn(`Cell at (${i}, ${j}) not found.`);\n          }\n      }\n      function insertSpanRow(i, colspan, content) {\n        var table = document.getElementById('tinytable_4izgg7utwi96mp1q4ief');\n        var newRow = table.insertRow(i);\n        var newCell = newRow.insertCell(0);\n        newCell.setAttribute(\"colspan\", colspan);\n        // newCell.innerText = content;\n        // this may be unsafe, but innerText does not interpret <br>\n        newCell.innerHTML = content;\n      }\n      function spanCell_4izgg7utwi96mp1q4ief(i, j, rowspan, colspan) {\n        var table = document.getElementById(\"tinytable_4izgg7utwi96mp1q4ief\");\n        const targetRow = table.rows[i];\n        const targetCell = targetRow.cells[j];\n        for (let r = 0; r < rowspan; r++) {\n          // Only start deleting cells to the right for the first row (r == 0)\n          if (r === 0) {\n            // Delete cells to the right of the target cell in the first row\n            for (let c = colspan - 1; c > 0; c--) {\n              if (table.rows[i + r].cells[j + c]) {\n                table.rows[i + r].deleteCell(j + c);\n              }\n            }\n          }\n          // For rows below the first, delete starting from the target column\n          if (r > 0) {\n            for (let c = colspan - 1; c >= 0; c--) {\n              if (table.rows[i + r] && table.rows[i + r].cells[j]) {\n                table.rows[i + r].deleteCell(j);\n              }\n            }\n          }\n        }\n        // Set rowspan and colspan of the target cell\n        targetCell.rowSpan = rowspan;\n        targetCell.colSpan = colspan;\n      }\n      // tinytable span after\n      window.addEventListener('load', function () {\n          var cellsToStyle = [\n            // tinytable style arrays after\n          { positions: [ { i: 6, j: 4 }, { i: 6, j: 5 }, { i: 6, j: 6 }, { i: 6, j: 0 }, { i: 6, j: 7 }, { i: 6, j: 1 }, { i: 6, j: 8 }, { i: 6, j: 2 }, { i: 6, j: 9 }, { i: 6, j: 3 }, { i: 6, j: 10 }, { i: 6, j: 17 }, { i: 6, j: 11 }, { i: 6, j: 18 }, { i: 6, j: 12 }, { i: 6, j: 19 }, { i: 6, j: 13 }, { i: 6, j: 20 }, { i: 6, j: 14 }, { i: 6, j: 21 }, { i: 6, j: 15 }, { i: 6, j: 22 }, { i: 6, j: 16 }, { i: 6, j: 23 }, { i: 6, j: 30 }, { i: 6, j: 24 }, { i: 6, j: 31 }, { i: 6, j: 25 }, { i: 6, j: 32 }, { i: 6, j: 26 }, { i: 6, j: 33 }, { i: 6, j: 27 }, { i: 6, j: 34 }, { i: 6, j: 28 }, { i: 6, j: 35 }, { i: 6, j: 29 }, { i: 6, j: 36 },  ], css_id: 'tinytable_css_79fjewf5syt6fzd0hxou',}, \n          { positions: [ { i: 0, j: 0 }, { i: 0, j: 7 }, { i: 0, j: 1 }, { i: 0, j: 8 }, { i: 0, j: 2 }, { i: 0, j: 9 }, { i: 0, j: 3 }, { i: 0, j: 10 }, { i: 0, j: 4 }, { i: 0, j: 11 }, { i: 0, j: 5 }, { i: 0, j: 12 }, { i: 0, j: 6 }, { i: 0, j: 13 }, { i: 0, j: 20 }, { i: 0, j: 14 }, { i: 0, j: 21 }, { i: 0, j: 15 }, { i: 0, j: 22 }, { i: 0, j: 16 }, { i: 0, j: 23 }, { i: 0, j: 17 }, { i: 0, j: 24 }, { i: 0, j: 18 }, { i: 0, j: 25 }, { i: 0, j: 19 }, { i: 0, j: 26 }, { i: 0, j: 33 }, { i: 0, j: 27 }, { i: 0, j: 34 }, { i: 0, j: 28 }, { i: 0, j: 35 }, { i: 0, j: 29 }, { i: 0, j: 36 }, { i: 0, j: 30 }, { i: 0, j: 31 }, { i: 0, j: 32 },  ], css_id: 'tinytable_css_guxzm9l1g4ocwrpt5vo2',}, \n          ];\n\n          // Loop over the arrays to style the cells\n          cellsToStyle.forEach(function (group) {\n              group.positions.forEach(function (cell) {\n                  styleCell_4izgg7utwi96mp1q4ief(cell.i, cell.j, group.css_id);\n              });\n          });\n      });\n    </script>\n\n    <style>\n      /* tinytable css entries after */\n      .table td.tinytable_css_79fjewf5syt6fzd0hxou, .table th.tinytable_css_79fjewf5syt6fzd0hxou { border-bottom: solid #d3d8dc 0.1em; }\n      .table td.tinytable_css_guxzm9l1g4ocwrpt5vo2, .table th.tinytable_css_guxzm9l1g4ocwrpt5vo2 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; }\n    </style>\n    <div class=\"container\">\n      <table class=\"table table-borderless\" id=\"tinytable_4izgg7utwi96mp1q4ief\" style=\"width: auto; margin-left: auto; margin-right: auto;\" data-quarto-disable-processing='true'>\n        <thead>\n        \n              <tr>\n                <th scope=\"col\">state</th>\n                <th scope=\"col\">sid</th>\n                <th scope=\"col\">year</th>\n                <th scope=\"col\">treatment_date</th>\n                <th scope=\"col\">is_treated</th>\n                <th scope=\"col\">l_homicide</th>\n                <th scope=\"col\">r20001</th>\n                <th scope=\"col\">r20002</th>\n                <th scope=\"col\">r20003</th>\n                <th scope=\"col\">r20011</th>\n                <th scope=\"col\">r20012</th>\n                <th scope=\"col\">r20013</th>\n                <th scope=\"col\">r20021</th>\n                <th scope=\"col\">r20022</th>\n                <th scope=\"col\">r20023</th>\n                <th scope=\"col\">r20031</th>\n                <th scope=\"col\">r20032</th>\n                <th scope=\"col\">r20033</th>\n                <th scope=\"col\">r20041</th>\n                <th scope=\"col\">r20042</th>\n                <th scope=\"col\">r20043</th>\n                <th scope=\"col\">r20051</th>\n                <th scope=\"col\">r20052</th>\n                <th scope=\"col\">r20053</th>\n                <th scope=\"col\">r20061</th>\n                <th scope=\"col\">r20062</th>\n                <th scope=\"col\">r20063</th>\n                <th scope=\"col\">r20071</th>\n                <th scope=\"col\">r20072</th>\n                <th scope=\"col\">r20073</th>\n                <th scope=\"col\">r20081</th>\n                <th scope=\"col\">r20082</th>\n                <th scope=\"col\">r20083</th>\n                <th scope=\"col\">r20091</th>\n                <th scope=\"col\">r20092</th>\n                <th scope=\"col\">r20093</th>\n                <th scope=\"col\">popwt</th>\n              </tr>\n        </thead>\n        \n        <tbody>\n                <tr>\n                  <td>Alabama</td>\n                  <td>1</td>\n                  <td>2000</td>\n                  <td>2006</td>\n                  <td>1</td>\n                  <td>2.027356</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>1</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>4499293</td>\n                </tr>\n                <tr>\n                  <td>Alabama</td>\n                  <td>1</td>\n                  <td>2001</td>\n                  <td>2006</td>\n                  <td>1</td>\n                  <td>2.164867</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>1</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>4499293</td>\n                </tr>\n                <tr>\n                  <td>Alabama</td>\n                  <td>1</td>\n                  <td>2002</td>\n                  <td>2006</td>\n                  <td>1</td>\n                  <td>1.936334</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>1</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>4499293</td>\n                </tr>\n                <tr>\n                  <td>Alabama</td>\n                  <td>1</td>\n                  <td>2003</td>\n                  <td>2006</td>\n                  <td>1</td>\n                  <td>1.919567</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>1</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>4499293</td>\n                </tr>\n                <tr>\n                  <td>Alabama</td>\n                  <td>1</td>\n                  <td>2004</td>\n                  <td>2006</td>\n                  <td>1</td>\n                  <td>1.749841</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>1</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>4499293</td>\n                </tr>\n                <tr>\n                  <td>Alabama</td>\n                  <td>1</td>\n                  <td>2005</td>\n                  <td>2006</td>\n                  <td>1</td>\n                  <td>2.130440</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>1</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>4499293</td>\n                </tr>\n        </tbody>\n      </table>\n    </div>\n<!-- hack to avoid NA insertion in last line -->\n```\n\n:::\n:::\n\n\n:::\n\n## パッケージの説明\n\n基本的な使い方と一緒にパッケージについて説明していきます。関数はイベントスタディを実行する`run_es()`関数とイベントスタディをggplotベースでプロットする`plot_es()`です。\n\n### `run_es()`\n\nひとまず、`run_es()`の基本的な引数を説明します。\n\n``` r\nrun_es(\n  data,\n  outcome,\n  treatment,\n  time,\n  staggered = FALSE,\n  timing,\n  lead_range = NULL,\n  lag_range = NULL,\n  covariates = NULL,\n  fe,\n  cluster = NULL,\n  weights = NULL,\n  baseline = -1,\n  interval = 1,\n  time_transform = FALSE,\n  unit = NULL\n)\n```\n\n- `data`：使用するデータフレーム\n- `outcome`：アウトカム変数\n- `treatment`：処置されていれば（時間によらず）1をとるダミー変数^[TRUE/FALSEでも可]\n- `time`：時間を示す変数（`year`など）\n- `staggered`：処置タイミングが個体ごとに異なるモデルの場合はTRUE（デフォルトはFALSE）\n- `timing`：処置タイミングを表す変数（`staggered`がFALSEの場合は数値、TRUEの場合は処置タイミングを示す変数）\n- `lead_range`：処置前の期間（処置年は含まず、デフォルトでは最大の期間をとる）\n- `lag_range`：処置後の期間（処置年は含まず、デフォルトでは最大の期間をとる）\n- `covariates`：共変量（`~ cov1 + cov2`のように書く）\n- `fe`：固定効果（`~ id + year`のように書く）\n- `cluster`：クラスタリングの単位（`~ id`のように書く）\n- `weights`：ウェイト（`~ weight`のように書く）\n- `baseline`：基準となる相対年（デフォルトでは処置の1期前）\n- `interval`：時間のインターバル（デフォルトでは1（1年ごとのデータ）、5にすれば国勢調査に対応（5年ごと））\n- `time_transform`：TRUEで時間変数に通し番号を振って処理。時間変数が文字列だったりイレギュラーな間隔の場合に対応（デフォルトはFALSE）\n- `unit`：`time_transform`がTRUEの場合に個体の単位を指定（`id`など）\n\n---\n\n文字で見てもわかりにくいと思うので、読み込んだデータを使って関数を回してみましょう。\n\n#### 通常のDiDにおけるイベントスタディ {#sec-basic-es}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nes <- run_es(\n  data = df_base, \n  outcome = y, \n  treatment = treat, \n  time = period, \n  timing = 6, \n  fe = ~ id + period, \n  cluster = ~ id\n)\n```\n:::\n\n\n基本的なケースであればこれくらいの指定で済みます。プロットは後のセクションでまとめて載せます。\n\n#### Staggered DiD 1\n\n\n::: {.cell}\n\n```{.r .cell-code}\nes_stagg1 <- run_es(\n  data = df_stagg, \n  outcome = y, \n  treatment = treated, \n  time = year, \n  staggered = TRUE, \n  timing = year_treated, \n  fe = ~ id + year, \n  cluster = ~ id\n)\n```\n:::\n\n\n[先ほど](#sec-basic-es)と違う点は、`staggered`がTRUEになっており、`timing`が具体的な数値ではなく、処置年を示す変数を指定しているところです。\n\n#### Staggered DiD 2\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 共変量の変数を式の形にしておく\ncovariates <- as.formula(paste(\"~\", paste(region, collapse = \"+\")))\n\nes_stagg2 <- run_es(\n  data = df_castle, \n  outcome = l_homicide, \n  treatment = is_treated, \n  time = year, \n  staggered = TRUE, \n  timing = treatment_date, \n  covariates = covariates, \n  fe = ~ state + year, \n  cluster = ~ sid, \n  weights = ~ popwt\n)\n```\n:::\n\n\n今回の例は共変量が多いので事前に`as.formula()`を使って処理してしまっていますが、関数内で`covariates = ~ cov1 + cov2`のような指定の仕方で問題ありません。\n\n### `plot_es()`\n\nこだわりがなければ、`plot_es(es)`の程度の書き方でプロットを出力することができます。引数の説明は後に回して、一旦先ほどのイベントスタディの結果をプロットしてみましょう。\n\n#### 通常のDiDにおけるイベントスタディ\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_es(es)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n後の2つもそうですが、ベースラインがデフォルトのままなので、処置前年（-1）が抜けて値が0をとっています。\n\n#### Staggered DiD 1\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_es(es_stagg1)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n#### Staggered DiD 2\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_es(es_stagg2)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\nStaggeredの方もいい感じにプロットできています。この図はMixtape内でlead変数とlag変数を手作業で作って実装しプロットされていますが、[その図](https://mixtape.scunning.com/09-difference_in_differences#fig-event-cheng2)と見比べても同じ推移が示されていることがわかります。\n\n#### 使い方\n\n基本的には上の使い方で十分ですが、ggplotベースで作ったこともあり、柔軟な対応も可能です。\n\n``` r\nplot_es(\n  data,\n  type = \"ribbon\",\n  vline_val = 0,\n  vline_color = \"#000\",\n  hline_val = 0,\n  hline_color = \"#000\",\n  linewidth = 1,\n  pointsize = 2,\n  alpha = 0.2,\n  barwidth = 0.2,\n  color = \"#B25D91FF\",\n  fill = \"#B25D91FF\"\n)\n```\n\n- `data`：`run_es()`で作成した結果のデータフレーム\n- `type`：`ribbon`と`errorbar`が指定可能\n- `vline_val`：縦の破線の位置（デフォルトは0）\n- `vline_color`：縦の破線の色（デフォルトは`#000`（黒））\n- `hline_val`：横の破線の位置（デフォルトは0）\n- `hline_color`：縦の破線の色（デフォルトは`#000`（黒））\n- `linewidth`：折れ線の太さ（デフォルトは1）\n- `pointsize`：点の大きさ（デフォルトは2）\n- `alpha`：リボンの透明度（デフォルトは0.2）\n- `color`：線と点の色（デフォルトは`#B25D91FF`（ピンク））\n- `fill`リボンの色（デフォルトは`#B25D91FF`（ピンク））\n\n---\n\n`plot_es()`関数内でもある程度自由度をもって設定できます。  \n例えばプロットをエラーバーのタイプにしてみましょう。\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_es(es_stagg2, type = \"errorbar\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\nさらに色も変えてみます。\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_es(es_stagg2, type = \"errorbar\", color = \"#000\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\nリボンタイプとエラーバータイプがあり、さらにそこからある程度の自由度もある点が他のパッケージに対する優位性にもなっています。\n\nちなみに、ggplotベースということで、**ggplotの関数をつなげることも可能です**！\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_es(es_stagg2, type = \"errorbar\", color = \"#000\") + \n  geom_hline(yintercept = .08, color = \"red\") + \n  annotate(\"text\", x = 3, y = -.1, label = \"DD Coefficient = 0.08\\n(s.e. = 0.03)\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\nMixtape風に係数を示す水平線と注釈を追加してみました。このようにどんどん要素を追加していくことができます。\n\n## おわりに\n\nまだまだ開発途上ですが、staggeredまで対応できたので、これからしばらくはブラッシュアップを念頭にアップデートしていこうと思います。\n\n冒頭にも書きましたが、もし使っていただいて「使いにくい」や「こんな機能が欲しい」等ありましたら、以下のコメントやGitHubの[Issues](https://github.com/yo5uke/fixes/issues)までお願いします。\n\n## 🔗 データ出典\n\nデータ出典：[Causal Inference: The Mixtape](https://mixtape.scunning.com/)（Scott Cunnningham, 2021）  \nデータはGitHub上で公開されており、以下のリポジトリから入手可能です：\n\n> https://github.com/scunning1975/mixtape\n\nまた、データはMITライセンスのもとで提供されています。\n\n\n\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}